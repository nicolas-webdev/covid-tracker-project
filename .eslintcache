[{"/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/index.js":"1","/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/InfoBox.js":"2","/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/LineGraph.js":"3","/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/App.js":"4","/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/util.js":"5","/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/Map.js":"6","/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/Table.js":"7","/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/reportWebVitals.js":"8"},{"size":500,"mtime":1611481691000,"results":"9","hashOfConfig":"10"},{"size":889,"mtime":1611505270000,"results":"11","hashOfConfig":"10"},{"size":2848,"mtime":1611508433000,"results":"12","hashOfConfig":"10"},{"size":4710,"mtime":1611508193000,"results":"13","hashOfConfig":"10"},{"size":1775,"mtime":1611502256000,"results":"14","hashOfConfig":"10"},{"size":588,"mtime":1611499827000,"results":"15","hashOfConfig":"10"},{"size":397,"mtime":1611501531000,"results":"16","hashOfConfig":"10"},{"size":364,"mtime":1611497767000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xpagt5",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/index.js",[],"/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/InfoBox.js",[],["36","37"],"/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/LineGraph.js",["38","39","40"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\n// The Actual Component !!!\nfunction LineGraph({ casesType = \"cases\", className }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          // buildChartData(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  const setColor = (casesType) => {\n    switch (casesType) {\n      case \"recovered\":\n        return {\n          backgroundColor: \"rgba(125, 215, 29, 0.5)\",\n          borderColor: \"#7dd71d\",\n        };\n        break;\n      case \"deaths\":\n        return {\n          backgroundColor: \"rgba(153, 67, 251, 0.5)\",\n          borderColor: \"#9043fb\",\n        };\n        break;\n\n      default:\n        return {\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n        };\n        break;\n    }\n  };\n\n  return (\n    <div className={className}>\n      {data?.length > 0 && (\n        <Line\n          className=\"lineGraph__line\"\n          data={{\n            datasets: [\n              {\n                backgroundColor: setColor(casesType).backgroundColor,\n                borderColor: setColor(casesType).backgroundColor.borderColor,\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/App.js",[],"/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/util.js",[],"/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/Map.js",[],"/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/Table.js",[],"/Volumes/MyDisk/Projects/covid-19-tracker-updated/src/reportWebVitals.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":93,"column":9,"nodeType":"47","messageId":"48","endLine":93,"endColumn":15},{"ruleId":"45","severity":1,"message":"46","line":99,"column":9,"nodeType":"47","messageId":"48","endLine":99,"endColumn":15},{"ruleId":"45","severity":1,"message":"46","line":106,"column":9,"nodeType":"47","messageId":"48","endLine":106,"endColumn":15},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]